global
    daemon
    maxconn 4096
    pidfile /var/run/haproxy.pid

    #user root
    #group root
    #chroot /var/lib/haproxy

    # Used in socat only
    #stats socket /var/run/haproxy.socket uid root gid root mode 0440 level admin

    #log /dev/log local0
    #log /dev/log local1 notice
    #log 127.0.0.1 local1 notice

defaults
    mode http

    # LOGGING
    #log global
    # Use HTTP log format
    #option  httplog
    # Dont log sessions for which no data were sent by the client
    #option  dontlognull
    # Forward client request details so that haproxy re-assembles the correct links
    option forwardfor

    timeout connect 5000
    timeout client 50000
    timeout server 50000


    balance roundrobin
    option redispatch

    #errorfile 400 /etc/haproxy/errors/400.http
    #errorfile 403 /etc/haproxy/errors/403.http
    #errorfile 408 /etc/haproxy/errors/408.http
    #errorfile 500 /etc/haproxy/errors/500.http
    #errorfile 502 /etc/haproxy/errors/502.http
    #errorfile 503 /etc/haproxy/errors/503.http
    #errorfile 504 /etc/haproxy/errors/504.http

listen stats-{{ now }} :1936
    mode http
    balance
    stats enable
    stats realm Haproxy\ Statistics
    #This is the virtual URL to access the stats page
    stats uri /haproxy
    #Authentication realm. This can be set to anything. Escape space characters with a backslash.
    stats realm HAProxy\ Statistics
    #The user/pass you want to use. Change this password!
    stats auth stats:stats
    #This allows you to take down and bring up back end servers.
    #This will produce an error on older versions of HAProxy.
    stats admin if TRUE

#frontend {{ now }}
#    bind *:666

{% for port, domains in services.iteritems() %}frontend front-{{ port }}
    bind *:{{ port }}
    {% for domain, servers in domains.iteritems() %}
    acl host-{{ port }}-{{ domain|replace('.','-') }} hdr(host) -i {{domain}}{% endfor %}
    {% for domain, servers in domains.iteritems() %}
    use_backend back-{{ port }}-{{ domain|replace('.','-') }} if host-{{ port }}-{{ domain|replace('.','-') }}
    {% if loop.index == 1 %}default_backend back-{{ port }}-{{ domain|replace('.','-') }}{% endif %}{% endfor %}

{% for domain, servers in domains.iteritems() %}backend back-{{ port }}-{{ domain|replace('.','-') }}
    {% for server in servers %}# Container {{server["ID"]}}
    server {{ domain|replace('.','-') }}-{{ port }}-{{loop.index}} {{ server["addr"] }} inter 2s rise 3 fall 2{% endfor %}
    {% endfor %}
{% endfor %}
