{{ $Containers := whereExist . "Env.SERVICE_NAME" }}
{{range $Container := whereExist $Containers "Env.SERVICE_PORT_MAPPING"}}
# SERVICE_NAME: {{$Container.Env.SERVICE_NAME}}
# SERVICE_PORT_MAPPING: {{$Container.Env.SERVICE_PORT_MAPPING}}
  {{$ServiceName := $Container.Env.SERVICE_NAME}}
  {{$Network := first $Container.Networks}}
  {{$InternalIP := $Network.IP}}
  {{range $PortMapping := split (print $Container.Env.SERVICE_PORT_MAPPING) ","}}
    {{$PortDetails := split (print $PortMapping) ":"}}
    {{$ExternalPortDetails := split (index $PortDetails 0) "/"}}
    {{$ExternalPort := index $ExternalPortDetails 0}}
    {{$InternalPort := index $PortDetails 1}}
    {{$SslEnabled := when (eq $ExternalPort "443") true false}}
    {{range $addr_index, $address := where $Container.Addresses ".Port" $InternalPort}}
      {{with dict "ServiceName" $ServiceName "ExternalPort" $ExternalPort "InternalIP" $InternalIP "InternalPort" $InternalPort "SslEnabled" $SslEnabled}}
      {{template "server" . }}
      {{end}}
    {{end}}
  {{end}}
{{end}}

{{define "server"}}
# Input: {{json . }}
{{if .SslEnabled}}
server {
  listen 80;
  server_name {{.ServiceName}};
  return 301 https://$server_name$request_uri;
}
{{end}}

server {
  server_name {{.ServiceName}};
  listen {{.ExternalPort}} {{if .SslEnabled}}ssl{{end}};
  {{if .SslEnabled}}
  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx.key;
  {{end}}

  access_log /dev/stdout;
  error_log /dev/stdout debug;

  location ~ / {
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/htpasswd/default;

    proxy_pass http://{{.InternalIP}}:{{.InternalPort}};
    proxy_pass_request_headers on;
    proxy_redirect     default;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_max_temp_file_size 0;

    #this is the maximum upload size
    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;
    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;

    # WebSocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
{{end}}
