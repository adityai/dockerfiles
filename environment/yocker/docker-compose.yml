version: '2'
services:
  ## DISCOVERY ##
  proxy:
    extends:
      file: ../../compose/nginx/services.yml
      service: nginx
    ports:
      # Internal port should match PUBLIC_PORT env variable
      - 80:80
      - 443:443
    volumes:
      - ./bin/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./bin/nginx/conf:/etc/nginx/base:ro
      - ./data/nginx/conf:/etc/nginx/conf.d:ro
      - ./data/nginx/ssl:/etc/nginx/ssl:ro
      # Static sites
      - ./bin/nginx/www:/var/www
  gen:
    extends:
      file: ../../compose/docker-gen/services.yml
      service: docker_gen
    command: -config /docker-gen/config/proxy.conf
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./bin/docker-gen:/docker-gen
      # Output for proxy
      - ./data/nginx/conf:/output/proxy
      # Output for status static site (containers.json)
      - ./bin/nginx/www/status:/output/status
  ## CADVISOR ##
  cadvisor:
    extends:
      file: ../../compose/cadvisor/services.yml
      service: cadvisor
    environment:
      # Used in service discovery
      - SERVICE_NAME=cadvisor.mydocker.co
      - SERVICE_PORT_MAPPING=443/ssl:8080
  ## IDE ##
  ide:
    extends:
      file: ../../compose/ide/services.yml
      service: ide
    command: --auth ${BASIC_AUTH_USER}:${BASIC_AUTH_PASSWORD}
    # ports:
    #   - 8181:8181
    environment:
      # Used in service discovery
      - SERVICE_NAME=ide.mydocker.co
      - SERVICE_PORT_MAPPING=443/ssl:8181
    volumes:
      - /root/codebase:/workspace
  ## TERMINAL ##
  terminal:
    extends:
      file: ../../compose/web-terminal/services.yml
      service: butterfly
    volumes:
      - ~/.ssh:/root/.ssh:ro
    #ports:
    #  - 2233:2233
    environment:
      # Terminal password
      - PASSWORD=${SECURE_PASSWORD}
      # Used in service discovery
      - SERVICE_NAME=terminal.mydocker.co
      - SERVICE_PORT_MAPPING=443/ssl:2233
  ## LOGGER ##
  log_observer:
    extends:
      file: ../../compose/docker-logs/services.yml
      service: log_observer
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  logio:
    extends:
      file: ../../compose/docker-logs/services.yml
      service: logio
    depends_on:
      - log_observer
    environment:
      # Used if you have service discovery service
      - PASSWORD=${SECURE_PASSWORD}
      # Used in service discovery
      - SERVICE_NAME=logs.mydocker.co
      - SERVICE_PORT_MAPPING=443/ssl:28778
    ## REGISTRY ##
  # registry_ui:
  #   extends:
  #     file: ../../compose/docker-registry/services.yml
  #     service: registry_ui
  #   ports:
  #     # To run without SSL encryption
  #     #- 5080:8080
  #     # To enable SSL encryption
  #     - 443:443
  #   # environment:
  #      # Used in service discovery
  #      - SERVICE_NAME=registryui.local.mydocker.co
  #      - SERVICE_PORT_MAPPING=443/ssl:8080
  # registry:
  #   extends:
  #     file: ../../compose/docker-registry/services.yml
  #     service: registry
  #   ports:
  #     - 5000:5000
  #   environment:
  #      #
  #      - SERVICE_NAME=registry.mydocker.co
  #      - SERVICE_PORT_MAPPING=5000:5000
